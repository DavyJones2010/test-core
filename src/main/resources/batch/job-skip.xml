<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">

	<bean name="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<batch:job id="skipLineJob" job-repository="jobRepository" restartable="false">
		<batch:step id="skipLineStep">
			<batch:tasklet>
				<batch:chunk reader="csvReader" writer="csvWriter" commit-interval="2" skip-limit="10">
					<batch:skippable-exception-classes>
						<batch:include class="org.springframework.batch.item.file.FlatFileParseException" />
					</batch:skippable-exception-classes>
				</batch:chunk>
				<batch:listeners>
					<batch:listener ref="skipListener" />
					<batch:listener ref="readListener" />
				</batch:listeners>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	<bean id="skipListener" class="edu.xmu.test.spring.batch.skip.SkipListener" />
	<bean id="readListener" class="edu.xmu.test.spring.batch.skip.ReadListener" />
	<bean id="trade" class="edu.xmu.test.spring.batch.model.Trade" scope="prototype" />
	<bean id="csvReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="resource" value="classpath:batch/csv/trade.csv" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="isin,quantity,price,customer" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="trade" />
					</bean>
				</property>
			</bean>
		</property>
		<property name="linesToSkip" value="1" />
	</bean>
	<bean id="csvWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:src/main/resources/batch/csv/trade-output.csv" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator" />
		</property>
	</bean>
</beans>