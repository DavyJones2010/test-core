Knowledge from:　软件架构模式
1)分层架构:
	Presentation Layer
	Business Layer
	Presistence Layer
	Database Layer
   注意事项:
    1) 污水池反模式(architecture sinkhole anti-pattern):80-20原则可以帮助你确定架构是否处于反污水模式。大概有百分之八十的请求仅仅是做简单的穿越，百分之二十的请求会做一些业务逻辑操作。然而，如果这个比例反过来，大部分的请求都是仅仅穿过层，不做逻辑操作。那么开放⼀些架构层会比较好。不过由于缺少了层次隔离，项目会变得难以控制。
2) 事件驱动架构:
	1) 中介拓朴结构
	2) 代理拓朴结构
3) 微内核架构:(也称为插件化应用架构)
	1) 核心系统
	2) 插件模块
   * 核心系统需要了解插件模块的可用性以及如何获取到它们.一个通用的实现方法是通过一组插件注册表。这个插件注册表含有每个插件模块的信息，包括它的名字、数据规约和远程访问协议(取决于插件如何与核心系统建立连接)
   * 插件模块可以通过多种方式连接到核心系统，包括OSGi (open service gateway initiative)、消息机制、web服务或者直接点对点的绑定 (比如对象实例化，即依赖注入)
   * 微内核架构本身没有指定任何的实现方式，唯一的规定就是插件模块之间不要产生依赖。
   * 插件和核心系统的通信规范包含标准规范和自定义规范


	